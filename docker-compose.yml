version: '3.9'

networks:
  internal_net:
    driver: bridge
  public_net:
    driver: bridge

services:

  postgres:
    image: postgres:16-alpine
    container_name: postgres_cont
    environment:
      - POSTGRES_USER=lms_user
      - POSTGRES_PASSWORD=lms_pass
      - POSTGRES_DB=lms_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - internal_net
  
  redis:
    image: redis:7-alpine
    container_name: redis_cont
    command: ["redis-server", "--requirepass", "redis_pass"]
    volumes:
    - redisdata:/data
    networks:
    - internal_net

  mongo:
    image: mongo:7
    container_name: mongo_cont
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongoadmin
      - MONGO_INITDB_ROOT_PASSWORD=mongopass
    networks:
      - internal_net

#================kong Gateway================#

  kong:
    image: kong:3.7
    container_name: kong_gateway
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/etc/kong/kong.yml
      - KONG_PROXY_LISTEN=0.0.0.0:8000
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
    ports:
      - "8000:8000"
      - "8001:8001"
    volumes:
      - ./gateway/kong.yaml:/etc/kong/kong.yml
    networks:
      - internal_net

#================Ngnix================#

  nginx:
    image: nginx:alpine
    container_name: nginx_lb
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - kong
    networks:
      - public_net
      - internal_net

    zookeeper:
      image: zookeeper:latest
      container_name: zookeeper_cont
      ports:
        - "2181:2181"
      networks:
        - internal_net
    
    kafka:
      image: confluentinc/cp-kafka:latest
      container_name: kafka_cont
      environment:
        KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
        KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
        KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092"
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "3"
        KAFKA_MIN_INSYNC_REPLICAS: "1"
      networks:
        - internal_net
      depends_on:
        - zookeeper
    
    kafka-ui:
      image: provectuslabs/kafka-ui:latest  
      container_name: kafka_ui
      ports:
        - "8081:8080"
      environment: 
        DYNAMIC_CONFIG_ENABLED: true
      depends_on:
        - zookeeper
        - kafka
      networks:
        - internal_net




#================LMS Services================#

  auth-service:
    build: ./services/auth-service
    container_name: auth_service
    environment:
      - PORT=4001
      - NODE_ENV=development
      - DATABASE_URL=postgresql://lms_user:lms_pass@postgres:5432/lms_db
      - ACCESS_TOKEN_SECRET=your_super_secret_access_token_key_here_at_least_32_chars
      - REFRESH_TOKEN_SECRET=your_super_secret_refresh_token_key_here_at_least_32_chars
    expose:
      - "4001"
    depends_on:
      - postgres
      - redis
      - mongo
    networks:
      - internal_net
    ports:
      - "5555:5555" # for the prisma studio

  notification-service:
    build: ./services/notification-service
    container_name: notification_service
    environment:
      - PORT=4002
      - NODE_ENV=development
      - KAFKA_BROKERS=kafka:29092
      - KAFKA_CLIENT_ID=notification-service
      - KAFKA_GROUP_ID=notification-group
    expose:
      - "4002"
    depends_on:
      - postgres
      - kafka
    networks:
      - internal_net
    

volumes:
  pgdata:
  redisdata:
  mongodata:





