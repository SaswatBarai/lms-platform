# gateway/kong/kong.yaml - Updated with /auth and /notification routing
_format_version: "3.0"
_transform: true

# Upstream services configuration
services:
  # Auth Service - handles all /auth/* endpoints  
  - name: auth-service
    url: http://auth-service:4001
    connect_timeout: 60000
    write_timeout: 60000
    read_timeout: 60000
    retries: 3
    tags: ["auth", "microservice"]
    routes:
      # Auth API routes - maps /auth/* to /api/* in auth service
      - name: auth-create-organization
        paths: ["/auth/create-organization"]
        methods: ["POST"]
        strip_path: false
        tags: ["auth", "organization", "public"]
        plugins:
          - name: request-transformer
            config:
              replace:
                uri: "/api/create-organization"

      - name: auth-verify-organization-otp
        paths: ["/auth/verify-organization-otp"]
        methods: ["POST"]
        strip_path: false
        tags: ["auth", "organization", "public"]
        plugins:
          - name: request-transformer
            config:
              replace:
                uri: "/api/verify-organization-otp"

      - name: auth-resend-organization-otp
        paths: ["/auth/resend-organization-otp"]
        methods: ["POST"]
        strip_path: false
        tags: ["auth", "organization", "public"]
        plugins:
          - name: request-transformer
            config:
              replace:
                uri: "/api/resend-organization-otp"

      - name: auth-login-organization
        paths: ["/auth/login-organization"]
        methods: ["POST"]
        strip_path: false
        tags: ["auth", "organization", "public"]
        plugins:
          - name: request-transformer
            config:
              replace:
                uri: "/api/login-organization"

      - name: auth-test-create-organization
        paths: ["/auth/test-create-organization"]
        methods: ["POST"]
        strip_path: false
        tags: ["auth", "organization", "test"]
        plugins:
          - name: request-transformer
            config:
              replace:
                uri: "/api/test-create-organization"

      # Protected auth routes
      - name: auth-test-protected
        paths: ["/auth/test-protected"]
        methods: ["GET"]
        strip_path: false
        tags: ["auth", "protected", "test"]
        plugins:
          - name: request-transformer
            config:
              replace:
                uri: "/api/test-protected"
          - name: paseto-vault-auth-lua
            config:
              vault_address: "http://vault:8200"
              vault_token: "dev-root-token"
              header_prefix: "X-User-"
              cache_timeout: 3600
              skip_path_prefixes: ["/health", "/metrics", "/auth/create-organization", "/auth/verify-organization-otp", "/auth/resend-organization-otp", "/auth/login-organization", "/auth/test-create-organization"]
              required_roles: []

      # Auth health endpoint - maps /auth/health to /health
      - name: auth-health
        paths: ["/auth/health"]
        methods: ["GET"]
        strip_path: false
        tags: ["auth", "health", "public"]
        plugins:
          - name: request-transformer
            config:
              replace:
                uri: "/health"

      # Legacy API routes for backward compatibility
      - name: legacy-create-organization
        paths: ["/api/create-organization"]
        methods: ["POST"]
        strip_path: false
        tags: ["auth", "organization", "public", "legacy"]

      - name: legacy-verify-organization-otp
        paths: ["/api/verify-organization-otp"]
        methods: ["POST"]
        strip_path: false
        tags: ["auth", "organization", "public", "legacy"]

      - name: legacy-resend-organization-otp
        paths: ["/api/resend-organization-otp"]
        methods: ["POST"]
        strip_path: false
        tags: ["auth", "organization", "public", "legacy"]

      - name: legacy-login-organization
        paths: ["/api/login-organization"]
        methods: ["POST"]
        strip_path: false
        tags: ["auth", "organization", "public", "legacy"]

      - name: legacy-test-create-organization
        paths: ["/api/test-create-organization"]
        methods: ["POST"]
        strip_path: false
        tags: ["auth", "organization", "test", "legacy"]

      # Protected test endpoint (requires authentication)
      - name: legacy-test-protected
        paths: ["/api/test-protected"]
        methods: ["GET"]
        strip_path: false
        tags: ["auth", "protected", "test", "legacy"]
        plugins:
          - name: paseto-vault-auth-lua
            config:
              vault_address: "http://vault:8200"
              vault_token: "dev-root-token"
              header_prefix: "X-User-"
              cache_timeout: 3600
              skip_path_prefixes: ["/health", "/metrics", "/auth", "/api/create-organization", "/api/verify-organization-otp", "/api/resend-organization-otp", "/api/login-organization", "/api/test-create-organization"]
              required_roles: []

      # Legacy health check endpoint
      - name: legacy-auth-health
        paths: ["/api/health", "/health"]
        methods: ["GET"]
        strip_path: false
        tags: ["auth", "health", "legacy"]

  # Notification Service - handles all /notification/* endpoints
  - name: notification-service
    url: http://notification-service:4002
    connect_timeout: 60000
    write_timeout: 60000
    read_timeout: 60000
    retries: 3
    tags: ["notification", "microservice"]
    routes:
      # All notification routes
      - name: notification-routes
        paths: ["/notification"]
        methods: ["GET", "POST", "PUT", "DELETE"]
        strip_path: true
        tags: ["notification", "protected"]
        plugins:
          - name: paseto-vault-auth-lua
            config:
              vault_address: "http://vault:8200"
              vault_token: "dev-root-token"
              header_prefix: "X-User-"
              cache_timeout: 3600
              skip_path_prefixes: ["/health", "/metrics"]
              required_roles: []

  # Infrastructure Service - handles system management
  - name: infrastructure-service  
    url: http://infrastructure-service:4003
    connect_timeout: 60000
    write_timeout: 60000
    read_timeout: 60000
    retries: 3
    tags: ["infrastructure", "microservice"]
    routes:
      # System health and metrics (admin only)
      - name: infrastructure-health
        paths: ["/api/infrastructure/health"]
        methods: ["GET"]
        strip_path: false
        tags: ["infrastructure", "health"]